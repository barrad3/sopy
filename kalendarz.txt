Instrukcja implementacji aplikacji kalendarza
===============================================

1. Utworzenie projektu
----------------------
1.1. Uruchom Visual Studio i utwórz nowy projekt typu "Windows Forms App" (np. w języku C#).
1.2. Nazwij projekt np. "WinFormsCalendar".
1.3. Właściwości głównego formularza (Form1):
     - Ustaw Size oraz MinimumSize na 800x500.

2. Projektowanie głównego okna
-------------------------------
2.1. Dodaj MenuStrip:
     - Przeciągnij kontrolkę MenuStrip na Form1.
     - Dodaj elementy menu: "Load" i "Save" (do wczytywania i zapisywania plików CSV).
2.2. Dodaj SplitContainer:
     - Umieść kontrolkę SplitContainer na Form1 i ustaw Dock = Fill.
     - SplitContainer podzieli okno na lewą (Panel1) i prawą (Panel2) część.
2.3. Konfiguracja lewego panelu (Panel1 – kalendarz):
     - Przeciągnij kontrolkę MonthCalendar do Panel1.
     - Ustaw Dock = Fill, aby kalendarz wypełniał całą przestrzeń.
2.4. Konfiguracja prawego panelu (Panel2 – lista zadań):
     - Przeciągnij kontrolkę ListView do Panel2.
     - Ustaw właściwość View na "Details" oraz FullRowSelect = True.
     - Dodaj kolumny (np. "Data", "Opis zadania", opcjonalnie "Done") przy użyciu edytora kolumn.
     - Ustaw Dock = Fill.
2.5. Dodanie panelu z przyciskami:
     - Na dole głównego okna dodaj osobny panel (np. Panel lub FlowLayoutPanel) i ustaw Dock = Bottom.
     - W panelu umieść dwa przyciski o stałym rozmiarze 100x40:
         a) Przycisk "Add":
            - Ustaw BackColor na Green, a ForeColor na systemowy ButtonHighlight.
            - Dodaj event handler, który otworzy okno "Add Task".
         b) Przycisk "Delete":
            - Ustaw BackColor na IndianRed, a ForeColor na ControlText.
            - Dodaj event handler usuwający zaznaczone zadania z ListView.

3. Implementacja funkcjonalności głównego okna
---------------------------------------------
3.1. Zamknięcie aplikacji:
     - W metodzie FormClosing wyświetl MessageBox z komunikatem:
       "Unsaved changes will be lost. 
        Are you sure you want to close the app?"
     - Pokaż przyciski Yes/No; jeśli użytkownik wybierze No, anuluj zamknięcie.
3.2. Menu:
     - "Load": Po kliknięciu otwórz OpenFileDialog z filtrem CSV. Wczytaj dane z pliku CSV do ListView.
     - "Save": Po kliknięciu otwórz SaveFileDialog, ustawiając domyślnie nazwę/lokalizację na ostatnio wczytany plik. Zapisz bieżące dane ListView do pliku CSV.
3.3. Kalendarz:
     - Po zaznaczeniu przedziału dat w MonthCalendar, filtruj zadania w ListView według daty.
     - Dla dat, w których występują zadania, zmodyfikuj czcionkę (np. pogrub ją), wykorzystując właściwość BoldedDates lub ręcznie zmieniając font.
3.4. Lista zadań:
     - Umożliw zmianę rozmiaru i przesuwanie kolumn.
     - Umożliw zaznaczanie całych wierszy.
     - Dodaj obsługę kolumny "Done" z CheckBoxami – zmiana statusu zadania powinna być zapisywana.

4. Tworzenie okna "Add Task"
----------------------------
4.1. Utwórz nowy formularz:
     - Kliknij prawym przyciskiem myszy na projekt → Add → Windows Form.
     - Nazwij formularz "AddTaskForm.cs".
     - Ustaw StartPosition = CenterParent oraz odpowiedni rozmiar (np. 300x200).
4.2. Zaprojektuj layout okna "Add Task":
     - Dodaj Label z napisem "Wybierz datę:" oraz kontrolkę DateTimePicker (nazwij ją taskDatePicker).
     - Dodaj Label z napisem "Opis zadania:" oraz TextBox (nazwij ją taskDescriptionTextBox); ustaw Multiline = True, jeśli opis ma być dłuższy.
     - Dodaj przyciski:
         a) "OK" (nazwij okButton).
         b) "Anuluj" (cancelButton) – opcjonalnie.
4.3. Implementacja logiki okna "Add Task":
     - Dodaj właściwości umożliwiające pobranie danych:
         public DateTime SelectedDate { get { return taskDatePicker.Value; } }
         public string TaskDescription { get { return taskDescriptionTextBox.Text; } }
     - W metodzie okButton_Click:
         * Sprawdź, czy taskDescriptionTextBox nie jest pusty.
         * Jeśli wszystko w porządku, ustaw this.DialogResult = DialogResult.OK i zamknij formularz.
     - W metodzie cancelButton_Click:
         * Ustaw this.DialogResult = DialogResult.Cancel i zamknij formularz.
4.4. Integracja okna "Add Task" z głównym oknem:
     - W głównym formularzu (Form1) w event handlerze przycisku "Add" utwórz instancję AddTaskForm, np.:
       
       using (AddTaskForm addTaskForm = new AddTaskForm())
       {
           // Opcjonalnie: ustaw startową datę w addTaskForm.taskDatePicker na wartość z głównego kalendarza.
           if (addTaskForm.ShowDialog() == DialogResult.OK)
           {
               DateTime date = addTaskForm.SelectedDate;
               string description = addTaskForm.TaskDescription;
               // Dodaj nowy wpis do ListView:
               ListViewItem newItem = new ListViewItem(new string[] { date.ToShortDateString(), description });
               tasksListView.Items.Add(newItem);
           }
       }

5. Testowanie i dodatkowe wskazówki
------------------------------------
5.1. Upewnij się, że wszystkie kontrolki mają właściwe ustawienia Dock i Anchor, by dynamicznie reagowały na zmianę rozmiaru okna.
5.2. Przetestuj działanie:
     - Wczytywania i zapisywania plików CSV.
     - Poprawność filtrowania zadań po zaznaczeniu przedziału w kalendarzu.
     - Funkcjonalność przycisków "Add" i "Delete".
     - Wyświetlanie okna potwierdzenia przy zamknięciu aplikacji.
5.3. Dopasuj kolory i style przycisków zgodnie z wymaganiami zadania.

===============================================
Koniec instrukcji implementacji aplikacji kalendarza
===============================================
